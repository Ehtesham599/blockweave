// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.17.3
// source: protos/query.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Enumeration of query types
type QueryQuerytype int32

const (
	Query_TXN       QueryQuerytype = 0
	Query_BLOCK     QueryQuerytype = 1
	Query_STATE     QueryQuerytype = 2
	Query_STATUS    QueryQuerytype = 3
	Query_INVENTORY QueryQuerytype = 4
)

// Enum value maps for QueryQuerytype.
var (
	QueryQuerytype_name = map[int32]string{
		0: "TXN",
		1: "BLOCK",
		2: "STATE",
		3: "STATUS",
		4: "INVENTORY",
	}
	QueryQuerytype_value = map[string]int32{
		"TXN":       0,
		"BLOCK":     1,
		"STATE":     2,
		"STATUS":    3,
		"INVENTORY": 4,
	}
)

func (x QueryQuerytype) Enum() *QueryQuerytype {
	p := new(QueryQuerytype)
	*p = x
	return p
}

func (x QueryQuerytype) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryQuerytype) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_query_proto_enumTypes[0].Descriptor()
}

func (QueryQuerytype) Type() protoreflect.EnumType {
	return &file_protos_query_proto_enumTypes[0]
}

func (x QueryQuerytype) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryQuerytype.Descriptor instead.
func (QueryQuerytype) EnumDescriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{5, 0}
}

// A message for a Block data query
type BlockQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID of the peer that sent the query
	Peerid string `protobuf:"bytes,1,opt,name=peerid,proto3" json:"peerid,omitempty"`
	// Hash of the query block
	Blockhash []byte `protobuf:"bytes,2,opt,name=blockhash,proto3" json:"blockhash,omitempty"`
}

func (x *BlockQuery) Reset() {
	*x = BlockQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockQuery) ProtoMessage() {}

func (x *BlockQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockQuery.ProtoReflect.Descriptor instead.
func (*BlockQuery) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{0}
}

func (x *BlockQuery) GetPeerid() string {
	if x != nil {
		return x.Peerid
	}
	return ""
}

func (x *BlockQuery) GetBlockhash() []byte {
	if x != nil {
		return x.Blockhash
	}
	return nil
}

// A message for a Transaction data query
type TxnQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID of the peer that sent the query
	Peerid string `protobuf:"bytes,1,opt,name=peerid,proto3" json:"peerid,omitempty"`
	// Hash of the query transaction
	Txnhash []byte `protobuf:"bytes,2,opt,name=txnhash,proto3" json:"txnhash,omitempty"`
}

func (x *TxnQuery) Reset() {
	*x = TxnQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnQuery) ProtoMessage() {}

func (x *TxnQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnQuery.ProtoReflect.Descriptor instead.
func (*TxnQuery) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{1}
}

func (x *TxnQuery) GetPeerid() string {
	if x != nil {
		return x.Peerid
	}
	return ""
}

func (x *TxnQuery) GetTxnhash() []byte {
	if x != nil {
		return x.Txnhash
	}
	return nil
}

// A message for a State query
type StateQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID of the peer that sent the query
	Peerid string `protobuf:"bytes,1,opt,name=peerid,proto3" json:"peerid,omitempty"`
	// Whether to include the minerconfig
	Minerconfig bool `protobuf:"varint,2,opt,name=minerconfig,proto3" json:"minerconfig,omitempty"`
}

func (x *StateQuery) Reset() {
	*x = StateQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateQuery) ProtoMessage() {}

func (x *StateQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateQuery.ProtoReflect.Descriptor instead.
func (*StateQuery) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{2}
}

func (x *StateQuery) GetPeerid() string {
	if x != nil {
		return x.Peerid
	}
	return ""
}

func (x *StateQuery) GetMinerconfig() bool {
	if x != nil {
		return x.Minerconfig
	}
	return false
}

// A message for Inventory data query
type InventoryQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID of the peer that sent the query
	Peerid string `protobuf:"bytes,1,opt,name=peerid,proto3" json:"peerid,omitempty"`
	// Height of the last block to include. This value represents the
	// height of the last block available to the peer making the request
	Lastblock uint32 `protobuf:"varint,2,opt,name=lastblock,proto3" json:"lastblock,omitempty"`
	// Whether to include pool transactions
	Pooltxns bool `protobuf:"varint,3,opt,name=pooltxns,proto3" json:"pooltxns,omitempty"`
}

func (x *InventoryQuery) Reset() {
	*x = InventoryQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InventoryQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InventoryQuery) ProtoMessage() {}

func (x *InventoryQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InventoryQuery.ProtoReflect.Descriptor instead.
func (*InventoryQuery) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{3}
}

func (x *InventoryQuery) GetPeerid() string {
	if x != nil {
		return x.Peerid
	}
	return ""
}

func (x *InventoryQuery) GetLastblock() uint32 {
	if x != nil {
		return x.Lastblock
	}
	return 0
}

func (x *InventoryQuery) GetPooltxns() bool {
	if x != nil {
		return x.Pooltxns
	}
	return false
}

// A message for Status data query
type StatusQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// PeerID of the peer that sent the query
	Peerid string `protobuf:"bytes,1,opt,name=peerid,proto3" json:"peerid,omitempty"`
	// Type of entity for which to check status
	Type Entitytype `protobuf:"varint,2,opt,name=type,proto3,enum=Entitytype" json:"type,omitempty"`
	// Hash of the entity for which to check status
	Entityhash []byte `protobuf:"bytes,3,opt,name=entityhash,proto3" json:"entityhash,omitempty"`
}

func (x *StatusQuery) Reset() {
	*x = StatusQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusQuery) ProtoMessage() {}

func (x *StatusQuery) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusQuery.ProtoReflect.Descriptor instead.
func (*StatusQuery) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{4}
}

func (x *StatusQuery) GetPeerid() string {
	if x != nil {
		return x.Peerid
	}
	return ""
}

func (x *StatusQuery) GetType() Entitytype {
	if x != nil {
		return x.Type
	}
	return Entitytype_TXN
}

func (x *StatusQuery) GetEntityhash() []byte {
	if x != nil {
		return x.Entityhash
	}
	return nil
}

// A message for an arbitrary data query
type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of query
	Type QueryQuerytype `protobuf:"varint,1,opt,name=type,proto3,enum=QueryQuerytype" json:"type,omitempty"`
	// Body of query
	//
	// Types that are assignable to Body:
	//	*Query_Txn
	//	*Query_Block
	//	*Query_State
	//	*Query_Status
	//	*Query_Inventory
	Body isQuery_Body `protobuf_oneof:"body"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_protos_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_protos_query_proto_rawDescGZIP(), []int{5}
}

func (x *Query) GetType() QueryQuerytype {
	if x != nil {
		return x.Type
	}
	return Query_TXN
}

func (m *Query) GetBody() isQuery_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *Query) GetTxn() *TxnQuery {
	if x, ok := x.GetBody().(*Query_Txn); ok {
		return x.Txn
	}
	return nil
}

func (x *Query) GetBlock() *BlockQuery {
	if x, ok := x.GetBody().(*Query_Block); ok {
		return x.Block
	}
	return nil
}

func (x *Query) GetState() *StateQuery {
	if x, ok := x.GetBody().(*Query_State); ok {
		return x.State
	}
	return nil
}

func (x *Query) GetStatus() *StatusQuery {
	if x, ok := x.GetBody().(*Query_Status); ok {
		return x.Status
	}
	return nil
}

func (x *Query) GetInventory() *InventoryQuery {
	if x, ok := x.GetBody().(*Query_Inventory); ok {
		return x.Inventory
	}
	return nil
}

type isQuery_Body interface {
	isQuery_Body()
}

type Query_Txn struct {
	// Type must be TXN
	Txn *TxnQuery `protobuf:"bytes,2,opt,name=txn,proto3,oneof"`
}

type Query_Block struct {
	// Type must be BLOCK
	Block *BlockQuery `protobuf:"bytes,3,opt,name=block,proto3,oneof"`
}

type Query_State struct {
	// Type must be STATE
	State *StateQuery `protobuf:"bytes,4,opt,name=state,proto3,oneof"`
}

type Query_Status struct {
	// Type must be STATUS
	Status *StatusQuery `protobuf:"bytes,5,opt,name=status,proto3,oneof"`
}

type Query_Inventory struct {
	// Type must be INVENTORY
	Inventory *InventoryQuery `protobuf:"bytes,6,opt,name=inventory,proto3,oneof"`
}

func (*Query_Txn) isQuery_Body() {}

func (*Query_Block) isQuery_Body() {}

func (*Query_State) isQuery_Body() {}

func (*Query_Status) isQuery_Body() {}

func (*Query_Inventory) isQuery_Body() {}

var File_protos_query_proto protoreflect.FileDescriptor

var file_protos_query_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x42, 0x0a, 0x0a, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x68, 0x61, 0x73, 0x68, 0x22, 0x3c, 0x0a,
	0x08, 0x54, 0x78, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x68, 0x61, 0x73, 0x68, 0x22, 0x46, 0x0a, 0x0a, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x62, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x61, 0x73, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x6f, 0x6c, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70,
	0x6f, 0x6f, 0x6c, 0x74, 0x78, 0x6e, 0x73, 0x22, 0x66, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x61, 0x73, 0x68, 0x22,
	0xbe, 0x02, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54,
	0x78, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x12, 0x23,
	0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48,
	0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2f, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x45, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x74, 0x79, 0x70, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x58, 0x4e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x56,
	0x45, 0x4e, 0x54, 0x4f, 0x52, 0x59, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_query_proto_rawDescOnce sync.Once
	file_protos_query_proto_rawDescData = file_protos_query_proto_rawDesc
)

func file_protos_query_proto_rawDescGZIP() []byte {
	file_protos_query_proto_rawDescOnce.Do(func() {
		file_protos_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_query_proto_rawDescData)
	})
	return file_protos_query_proto_rawDescData
}

var file_protos_query_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_query_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protos_query_proto_goTypes = []interface{}{
	(QueryQuerytype)(0),    // 0: Query.querytype
	(*BlockQuery)(nil),     // 1: BlockQuery
	(*TxnQuery)(nil),       // 2: TxnQuery
	(*StateQuery)(nil),     // 3: StateQuery
	(*InventoryQuery)(nil), // 4: InventoryQuery
	(*StatusQuery)(nil),    // 5: StatusQuery
	(*Query)(nil),          // 6: Query
	(Entitytype)(0),        // 7: entitytype
}
var file_protos_query_proto_depIdxs = []int32{
	7, // 0: StatusQuery.type:type_name -> entitytype
	0, // 1: Query.type:type_name -> Query.querytype
	2, // 2: Query.txn:type_name -> TxnQuery
	1, // 3: Query.block:type_name -> BlockQuery
	3, // 4: Query.state:type_name -> StateQuery
	5, // 5: Query.status:type_name -> StatusQuery
	4, // 6: Query.inventory:type_name -> InventoryQuery
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_protos_query_proto_init() }
func file_protos_query_proto_init() {
	if File_protos_query_proto != nil {
		return
	}
	file_protos_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InventoryQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_query_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*Query_Txn)(nil),
		(*Query_Block)(nil),
		(*Query_State)(nil),
		(*Query_Status)(nil),
		(*Query_Inventory)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_query_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_query_proto_goTypes,
		DependencyIndexes: file_protos_query_proto_depIdxs,
		EnumInfos:         file_protos_query_proto_enumTypes,
		MessageInfos:      file_protos_query_proto_msgTypes,
	}.Build()
	File_protos_query_proto = out.File
	file_protos_query_proto_rawDesc = nil
	file_protos_query_proto_goTypes = nil
	file_protos_query_proto_depIdxs = nil
}
